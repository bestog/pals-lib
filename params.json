{
  "name": "Pals",
  "tagline": "Privacy Aware Location Service Library for Android",
  "body": "# Privacy Aware Location Service Library\r\n[![Download](https://api.bintray.com/packages/bestog/pals/pals/images/download.svg)](https://bintray.com/bestog/pals/pals/_latestVersion)\r\n[![API](https://img.shields.io/badge/API-11%2B-green.svg)](https://github.com/bestog/pals-lib/tree/master)\r\n[![Build Status](https://travis-ci.org/bestog/pals-lib.svg?branch=master)](https://travis-ci.org/bestog/pals-lib)\r\n\r\n__Privacy Aware Location Service Library for Android -- MLS, OpenCellID, OpenBMap and OpenWLANMap__\r\n\r\nThe GPS localization is realized in Android through a Google service. Google can thereby save user profiles and track the movements of the user. This library prevents the localization on Google interface and uses only free-usable anonymous location-services.\r\nData on the surrounding wireless networks and cell towers are sent to the location-service. As a result, you get the calculated approximate GPS location of the user.\r\n\r\n_Be clever and keep your private data anonymous!_\r\n\r\n__Pull-Requests are allowed and encouraged!__\r\n\r\n## Getting Started\r\n\r\n__Maven__\r\n```xml\r\n<dependency>\r\n  <groupId>com.bestog.pals</groupId>\r\n  <artifactId>pals</artifactId>\r\n  <version>2.2</version>\r\n  <type>pom</type>\r\n</dependency>\r\n```\r\n\r\n__Gradle__\r\n```java\r\ncompile 'com.bestog.pals:pals:2.2'\r\n```\r\n\r\n## Usage\r\n__AndroidManifest.xml__\r\n```xml\r\n<uses-permission android:name=\"android.permission.INTERNET\"/>\r\n<uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\"/>\r\n<uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\r\n// Only for submit-request\r\n<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\r\n```\r\n\r\n__Basics__\r\n```java\r\n// Initialize Pals\r\nPals pals = new Pals(context);\r\n\r\n// Enable Provider\r\n// - Location-Provider with your own access-token\r\npals.enableProvider(LocationProvider.PROVIDER_MOZILLA, \"[YOUR ACCESS-TOKEN]\");\r\n// - Location-Provider with a fallback access-token\r\npals.enableProvider(LocationProvider.PROVIDER_MOZILLA, null);\r\n// Disable Provider\r\npals.disabledProvider(LocationProvider.PROVIDER_MOZILLA);\r\n...\r\n```\r\n[Available Location-Provider](#provider)\r\n\r\n__Request__\r\n\r\nA request that returns the current approximate position of the user as a result.\r\n```java\r\npals.request(new IRequest() {\r\n    @Override\r\n    public void onComplete(GeoResult result, boolean valid) {\r\n        // Result - Example -----------------\r\n        double lat = result.getLatitude();\r\n        double lon = result.getLongitude();\r\n        int acc = result.getAccuracy();\r\n        boolean validRequest = valid;\r\n        // ----  YOUR CODE ------------------\r\n    }\r\n});\r\n```\r\n__Submit__\r\n\r\nTo guarantee accurate position of a user, the database of location-services with new data needs to be filled.\r\n\r\nSupport the location services and collect new data!\r\n```java\r\npals.submit(new ISubmit() {\r\n    @Override\r\n    public void onComplete(boolean valid) {\r\n        // Result - Example -----------\r\n        boolean validSubmit = valid;\r\n        // ----  YOUR CODE ------------\r\n    }\r\n});\r\n```\r\n\r\n## <a name=\"provider\"></a>Provider\r\n\r\n| Location-Provider | Constant | Request | Submit | Access-Token |\r\n| :--- | :--- | :---: | :---: | :---: |\r\n|Mozilla Location|`LocationProvider.PROVIDER_MOZILLA`|**X**|**X**|**X**|\r\n|OpenCellID|`LocationProvider.PROVIDER_OPENCELLID`|**X**| |**X**|\r\n|OpenBMap|`LocationProvider.PROVIDER_OPENBMAP`|**X**| | |\r\n|OpenWLANMap|`LocationProvider.PROVIDER_OPENMAP`|**X**| | |\r\n|Google Geolocation|`LocationProvider.PROVIDER_GOOGLE`|**X**| |**X**|\r\n\r\n## Functions\r\n\r\n#### enableProvider\r\nEnable a location-provider for the geolocation.\r\n```java\r\n// with your own access-token\r\nvoid enableProvider(String provider, String token);\r\n// with fallback access-token\r\nvoid enableProvider(String provider, null);\r\n```\r\n\r\n#### disableProvider\r\nDisable a location-provider for the geolocation.\r\n```java\r\nvoid disableProvider(String provider);\r\n```\r\n\r\n#### getEnabledProviders\r\nGet all enabled location-provider as a list with location-provider-objects\r\n```java\r\nMap<String, LocationProvider> getEnabledProviders();\r\n```\r\n\r\n#### getEnabledProviderList\r\nGet all enabled location-provider as a list\r\n```java\r\nArrayList<String> getEnabledProviderList();\r\n```\r\n\r\n#### request\r\nExecutes a request and sends at the end the result to the listener.\r\n```java\r\nvoid request(IRequest listener);\r\n```\r\n\r\n#### submit\r\nExecutes a submit, collect data from current position and send to a location-provider.\r\n```java\r\nvoid submit(ISubmit listener);\r\n```\r\n\r\n#### isProviderEnabled\r\nIs the specific location-provider enabled?\r\n```java\r\nboolean isProviderEnabled(String provider);\r\n```\r\n\r\n#### setTrilaterateAlg\r\nSet a specific algorithm for the calculation\r\n```java\r\nvoid setTrilaterateAlg(String alg);\r\n```\r\n \r\n## License\r\n\r\n    Copyright 2016 - bestog\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}